// Generated by CoffeeScript 1.3.3

require(["dojo/_base/xhr", "dojo/dom", "dojo/query", "dijit/registry", "dijit/form/Button", "dojo/fx/Toggler", "dojo/NodeList-dom", "dojo/NodeList-manipulate", "dojo/domReady!"], function(xhr, dom, query, registry, Button, Toggler) {
  var hexagramimagedir, hideperspectivebase, hideresultpane, imagemap_, inithexagramimage, initkousymbolimage, initresulthexagram, initresultkou, initsangiimage, kousymbolimagedir, perspectivebasetoggler, readingbtn, readingresultjsonurl_, replaceresulthexagrammain, replaceresulthexagramperspective, replaceresultkousangiimage, replaceresultkousymbolimage, replaceresultkousymbolname, resultpanetoggler, retrybtn, sangiimagedir, showperspectivebase, showresultpane;
  hideresultpane = function() {
    return resultpanetoggler.hide();
  };
  hideperspectivebase = function() {
    return perspectivebasetoggler.hide();
  };
  showresultpane = function() {
    return resultpanetoggler.show();
  };
  showperspectivebase = function() {
    return perspectivebasetoggler.show();
  };
  initresultkou = function() {
    query(".kousangiimage").attr("src", initsangiimage);
    query(".kousymbolimage").attr("src", initkousymbolimage);
    query(".kousymbolname").text("");
    return query(".kousymbolname").attr("englishname", "none");
  };
  initresulthexagram = function() {
    query(".hexagramimage").attr("src", inithexagramimage);
    query(".hexagramname").text("");
    query(".hexagramalias").text("");
    return query(".hexagramaliasenglish").text("");
  };
  replaceresultkousangiimage = function(data) {
    var i, ss;
    i = 0;
    while (i < 6) {
      if (data.kousresult[i].kousangiimage) {
        ss = sangiimagedir + "/" + data.kousresult[i].kousangiimage;
        dom.byId("kousangiimage" + (i + 1)).src = ss;
      }
      i++;
    }
  };
  replaceresultkousymbolimage = function(data) {
    var i, ss;
    i = 0;
    while (i < 6) {
      if (data.kousresult[i].kousymbolimage) {
        ss = kousymbolimagedir + "/" + data.kousresult[i].kousymbolimage;
        dom.byId("kousymbolimage" + (i + 1)).src = ss;
      }
      i++;
    }
  };
  replaceresultkousymbolname = function(data) {
    var i;
    i = 0;
    while (i < 6) {
      if (data.kousresult[i].kousymbolname) {
        dom.byId("kousymbolname" + (i + 1)).innerHTML = data.kousresult[i].kousymbolname;
      }
      if (data.kousresult[i].kousymbolenglishname) {
        query("#kousymbolname" + (i + 1)).attr("englishname", data.kousresult[i].kousymbolenglishname);
      }
      i++;
    }
  };
  replaceresulthexagrammain = function(data) {
    var hn, ss;
    if (data.mainresult) {
      if (data.mainresult.hexagramimage) {
        ss = hexagramimagedir + "/" + data.mainresult.hexagramimage;
        dom.byId("hexagramimagemain").src = ss;
      }
      if (data.mainresult.hexagramnumber && data.mainresult.hexagramname) {
        hn = data.mainresult.hexagramnumber + ". " + data.mainresult.hexagramname;
        dom.byId("hexagramnamemain").innerHTML = hn;
      }
      if (data.mainresult.hexagramaliasname) {
        dom.byId("hexagramaliasmain").innerHTML = data.mainresult.hexagramaliasname;
      }
      if (data.mainresult.hexagramaliasenglishname) {
        dom.byId("hexagramaliasenglishmain").innerHTML = data.mainresult.hexagramaliasenglishname;
      }
    }
  };
  replaceresulthexagramperspective = function(data) {
    var hn, ss;
    if (data.perspectiveresult) {
      showperspectivebase();
      if (data.perspectiveresult.hexagramimage) {
        ss = hexagramimagedir + "/" + data.perspectiveresult.hexagramimage;
        dom.byId("hexagramimageperspective").src = ss;
      }
      if (data.perspectiveresult.hexagramnumber && data.perspectiveresult.hexagramname) {
        hn = data.perspectiveresult.hexagramnumber + ". " + data.perspectiveresult.hexagramname;
        dom.byId("hexagramnameperspective").innerHTML = hn;
      }
      if (data.perspectiveresult.hexagramaliasname) {
        dom.byId("hexagramaliasperspective").innerHTML = data.perspectiveresult.hexagramaliasname;
      }
      if (data.perspectiveresult.hexagramaliasenglishname) {
        dom.byId("hexagramaliasenglishperspective").innerHTML = data.perspectiveresult.hexagramaliasenglishname;
      }
    }
  };
  readingresultjsonurl_ = "/ichingreadingcf01/dojo/readingresultjson";
  imagemap_ = {
    sangi: {
      dir: "/ichingreadingcf01/images/iching",
      images: {
        oldyang: "icsangiyangB.png",
        youngyang: "icsangiyangB.png",
        oldyin: "icsangiyinB.png",
        youngyin: "icsangiyinB.png",
        init: "sangiW.png"
      }
    },
    kou: {
      dir: "/ichingreadingcf01/images/iching",
      images: {
        oldyang: "oldyangB.png",
        youngyang: "youngyangB.png",
        oldyin: "oldyinB.png",
        youngyin: "youngyinB.png",
        init: "kousymbolW.png"
      }
    },
    hexagram: {
      dir: "/ichingreadingcf01/images/hexagram",
      images: {
        init: "emptyIching-hexagram.png"
      }
    }
  };
  sangiimagedir = imagemap_.sangi.dir;
  initsangiimage = sangiimagedir + "/" + imagemap_.sangi.images.init;
  kousymbolimagedir = imagemap_.kou.dir;
  initkousymbolimage = kousymbolimagedir + "/" + imagemap_.kou.images.init;
  hexagramimagedir = imagemap_.hexagram.dir;
  inithexagramimage = hexagramimagedir + "/" + imagemap_.hexagram.images.init;
  resultpanetoggler = new Toggler({
    node: "ichingresultpane"
  });
  perspectivebasetoggler = new Toggler({
    node: "hexagramperspectivetablebase"
  });
  readingbtn = new Button({
    label: "Reading",
    onClick: function() {
      registry.byId("readingbtn").set("disabled", true);
      registry.byId("retrybtn").set("disabled", true);
      initresultkou();
      initresulthexagram();
      hideperspectivebase();
      hideresultpane();
      return xhr.post({
        url: readingresultjsonurl_,
        handleAs: "json",
        load: function(jsonData) {
          showresultpane();
          replaceresultkousangiimage(jsonData);
          replaceresultkousymbolimage(jsonData);
          replaceresultkousymbolname(jsonData);
          replaceresulthexagrammain(jsonData);
          replaceresulthexagramperspective(jsonData);
          return registry.byId("retrybtn").set("disabled", false);
        },
        error: function(err) {
          return console.error(err);
        }
      });
    }
  }, "readingbtn");
  readingbtn.startup();
  retrybtn = new Button({
    label: "Retry",
    disabled: true,
    onClick: function() {
      registry.byId("retrybtn").set("disabled", true);
      hideperspectivebase();
      hideresultpane();
      initresultkou();
      initresulthexagram();
      return registry.byId("readingbtn").set("disabled", false);
    }
  }, "retrybtn");
  retrybtn.startup();
  hideperspectivebase();
  hideresultpane();
});
